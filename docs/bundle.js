(()=>{"use strict";var n={402:(n,e,t)=>{t.d(e,{Z:()=>C});var r=t(537),a=t.n(r),o=t(645),A=t.n(o),i=t(667),s=t.n(i),c=new URL(t(90),t.b),l=new URL(t(409),t.b),p=new URL(t(628),t.b),u=A()(a());u.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Figtree&display=swap);"]);var d=s()(c),g=s()(l),f=s()(p);u.push([n.id,"body {\n  height: 100vh;\n  margin: 0;\n  font-family: 'Figtree', sans-serif;\n}\n.container {\n  height: 100%;\n  display: grid;\n  grid-template-rows: 40px 4fr 6fr;\n}\n\n.nav {\n  display: flex;\n  justify-content: end;\n  margin-right: 50px;\n  margin-top: 10px;\n  gap: 30px;\n}\n\n.nav img {\n  height: 30px;\n}\n\n.nav img:hover {\n  transform: scale(110%);\n  transform: rotateZ(22deg);\n}\n\n.hero {\n  grid-row: 2/3;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  gap: 50px;\n  font-size: 1.3rem;\n  margin-top: 25px;\n  margin-bottom: 25px;\n}\n.heroContent>* {\n  margin: 0;\n}\n.heroContent {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n}\n.heroContent ul {\n  list-style: none;\n  padding: 0;\n}\n\nul li img {\n  height: 20px;\n  margin-right: 5px;\n}\n\n.hero>img {\n  height: 300px;\n  border-radius: 20px;\n  border: 5px solid rgb(22, 22, 22);\n}\n.buttons {\n  display: flex;\n  gap: 20px;\n}\n.buttons a img {\n  height: 40px;\n}\n\n\n\n\n.panels {\n  overflow: hidden;\n  display:flex;\n  border-top: 5px solid rgb(22, 22, 22);\n  gap: 20px;\n}\n\n.panel {\n  color: white;\n  text-align: center;\n  align-items: center;\n  transition:\n    font-size 0.7s cubic-bezier(0.61,-0.19, 0.7,-0.11),\n    flex 0.7s cubic-bezier(0.61,-0.19, 0.7,-0.11),\n    background 0.2s,\n    opacity 0.5s,\n    filter 0.4s;\n  font-size: 2rem;\n  background-size: cover;\n  background-position: center;\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: end;\n  filter: saturate(0%);\n}\n\n.panel1 { background-image:url("+d+");}\n.panel2 { background-image:url("+g+"); }\n.panel3 { background-image:url("+f+"); }\n.panel4 { background-image:url("+d+"); }\n.panel5 { background-image:url("+d+"); }\n\n.saturate{\n  filter: saturate(100%);\n}\n\n.panel:hover {\n  opacity: 100%;\n  filter: saturate(1);\n}\n\n.panel p {\n  text-transform: uppercase;\n  color: white;\n  margin: 0;\n  background-color: rgb(22, 22, 22);\n  width: 100%;\n  padding: 10px 0 10px 0;\n}\n\na{\n  color: white;\n  text-decoration: none;\n}\na:hover {\n  text-decoration: underline;\n  transform:scale(90%);\n}\n\n.panel a img {\n  height: 40px;\n  filter: invert(100%);\n}\n.panel a img:hover {\n  transform: scale(110%);\n  transform: rotateZ(22deg);\n}\n\n.panel.open {\n  flex: 5;\n}","",{version:3,sources:["webpack://./src/css/style.css"],names:[],mappings:"AAEA;EACE,aAAa;EACb,SAAS;EACT,kCAAkC;AACpC;AACA;EACE,YAAY;EACZ,aAAa;EACb,gCAAgC;AAClC;;AAEA;EACE,aAAa;EACb,oBAAoB;EACpB,kBAAkB;EAClB,gBAAgB;EAChB,SAAS;AACX;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,sBAAsB;EACtB,yBAAyB;AAC3B;;AAEA;EACE,aAAa;EACb,aAAa;EACb,mBAAmB;EACnB,uBAAuB;EACvB,mBAAmB;EACnB,SAAS;EACT,iBAAiB;EACjB,gBAAgB;EAChB,mBAAmB;AACrB;AACA;EACE,SAAS;AACX;AACA;EACE,YAAY;EACZ,aAAa;EACb,sBAAsB;EACtB,6BAA6B;AAC/B;AACA;EACE,gBAAgB;EAChB,UAAU;AACZ;;AAEA;EACE,YAAY;EACZ,iBAAiB;AACnB;;AAEA;EACE,aAAa;EACb,mBAAmB;EACnB,iCAAiC;AACnC;AACA;EACE,aAAa;EACb,SAAS;AACX;AACA;EACE,YAAY;AACd;;;;;AAKA;EACE,gBAAgB;EAChB,YAAY;EACZ,qCAAqC;EACrC,SAAS;AACX;;AAEA;EACE,YAAY;EACZ,kBAAkB;EAClB,mBAAmB;EACnB;;;;;eAKa;EACb,eAAe;EACf,sBAAsB;EACtB,2BAA2B;EAC3B,OAAO;EACP,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,oBAAoB;EACpB,oBAAoB;AACtB;;AAEA,UAAU,wDAA0C,CAAC;AACrD,UAAU,wDAA0C,EAAE;AACtD,UAAU,wDAA+C,EAAE;AAC3D,UAAU,wDAA0C,EAAE;AACtD,UAAU,wDAA0C,EAAE;;AAEtD;EACE,sBAAsB;AACxB;;AAEA;EACE,aAAa;EACb,mBAAmB;AACrB;;AAEA;EACE,yBAAyB;EACzB,YAAY;EACZ,SAAS;EACT,iCAAiC;EACjC,WAAW;EACX,sBAAsB;AACxB;;AAEA;EACE,YAAY;EACZ,qBAAqB;AACvB;AACA;EACE,0BAA0B;EAC1B,oBAAoB;AACtB;;AAEA;EACE,YAAY;EACZ,oBAAoB;AACtB;AACA;EACE,sBAAsB;EACtB,yBAAyB;AAC3B;;AAEA;EACE,OAAO;AACT",sourcesContent:['@import url(\'https://fonts.googleapis.com/css2?family=Figtree&display=swap\');\n\nbody {\n  height: 100vh;\n  margin: 0;\n  font-family: \'Figtree\', sans-serif;\n}\n.container {\n  height: 100%;\n  display: grid;\n  grid-template-rows: 40px 4fr 6fr;\n}\n\n.nav {\n  display: flex;\n  justify-content: end;\n  margin-right: 50px;\n  margin-top: 10px;\n  gap: 30px;\n}\n\n.nav img {\n  height: 30px;\n}\n\n.nav img:hover {\n  transform: scale(110%);\n  transform: rotateZ(22deg);\n}\n\n.hero {\n  grid-row: 2/3;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  gap: 50px;\n  font-size: 1.3rem;\n  margin-top: 25px;\n  margin-bottom: 25px;\n}\n.heroContent>* {\n  margin: 0;\n}\n.heroContent {\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n}\n.heroContent ul {\n  list-style: none;\n  padding: 0;\n}\n\nul li img {\n  height: 20px;\n  margin-right: 5px;\n}\n\n.hero>img {\n  height: 300px;\n  border-radius: 20px;\n  border: 5px solid rgb(22, 22, 22);\n}\n.buttons {\n  display: flex;\n  gap: 20px;\n}\n.buttons a img {\n  height: 40px;\n}\n\n\n\n\n.panels {\n  overflow: hidden;\n  display:flex;\n  border-top: 5px solid rgb(22, 22, 22);\n  gap: 20px;\n}\n\n.panel {\n  color: white;\n  text-align: center;\n  align-items: center;\n  transition:\n    font-size 0.7s cubic-bezier(0.61,-0.19, 0.7,-0.11),\n    flex 0.7s cubic-bezier(0.61,-0.19, 0.7,-0.11),\n    background 0.2s,\n    opacity 0.5s,\n    filter 0.4s;\n  font-size: 2rem;\n  background-size: cover;\n  background-position: center;\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: end;\n  filter: saturate(0%);\n}\n\n.panel1 { background-image:url("../assets/lofi.jpg");}\n.panel2 { background-image:url("../assets/surf.jpg"); }\n.panel3 { background-image:url("../assets/ask-giphy.png"); }\n.panel4 { background-image:url("../assets/lofi.jpg"); }\n.panel5 { background-image:url("../assets/lofi.jpg"); }\n\n.saturate{\n  filter: saturate(100%);\n}\n\n.panel:hover {\n  opacity: 100%;\n  filter: saturate(1);\n}\n\n.panel p {\n  text-transform: uppercase;\n  color: white;\n  margin: 0;\n  background-color: rgb(22, 22, 22);\n  width: 100%;\n  padding: 10px 0 10px 0;\n}\n\na{\n  color: white;\n  text-decoration: none;\n}\na:hover {\n  text-decoration: underline;\n  transform:scale(90%);\n}\n\n.panel a img {\n  height: 40px;\n  filter: invert(100%);\n}\n.panel a img:hover {\n  transform: scale(110%);\n  transform: rotateZ(22deg);\n}\n\n.panel.open {\n  flex: 5;\n}'],sourceRoot:""}]);const C=u},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,a,o){"string"==typeof n&&(n=[[null,n,void 0]]);var A={};if(r)for(var i=0;i<this.length;i++){var s=this[i][0];null!=s&&(A[s]=!0)}for(var c=0;c<n.length;c++){var l=[].concat(n[c]);r&&A[l[0]]||(void 0!==o&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=o),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),a&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=a):l[4]="".concat(a)),e.push(l))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),o="/*# ".concat(a," */");return[e].concat([o]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var o={},A=[],i=0;i<n.length;i++){var s=n[i],c=r.base?s[0]+r.base:s[0],l=o[c]||0,p="".concat(c," ").concat(l);o[c]=l+1;var u=t(p),d={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==u)e[u].references++,e[u].updater(d);else{var g=a(d,r);r.byIndex=i,e.splice(i,0,{identifier:p,updater:g,references:1})}A.push(p)}return A}function a(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,a){var o=r(n=n||[],a=a||{});return function(n){n=n||[];for(var A=0;A<o.length;A++){var i=t(o[A]);e[i].references--}for(var s=r(n,a),c=0;c<o.length;c++){var l=t(o[c]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}o=s}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var a=void 0!==t.layer;a&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,a&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},628:(n,e,t)=>{n.exports=t.p+"94fa3d648b2f781e0b13.png"},90:(n,e,t)=>{n.exports=t.p+"5025b150efafa0bc1a40.jpg"},409:(n,e,t)=>{n.exports=t.p+"339541489d04673a1507.jpg"}},e={};function t(r){var a=e[r];if(void 0!==a)return a.exports;var o=e[r]={id:r,exports:{}};return n[r](o,o.exports,t),o.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");r.length&&(n=r[r.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var n=t(379),e=t.n(n),r=t(795),a=t.n(r),o=t(569),A=t.n(o),i=t(565),s=t.n(i),c=t(216),l=t.n(c),p=t(589),u=t.n(p),d=t(402),g={};function f(){this.classList.toggle("open")}function C(n){n.classList.includes("saturate")?this.classList.remove("saturate"):this.classList.add("saturate")}g.styleTagTransform=u(),g.setAttributes=s(),g.insert=A().bind(null,"head"),g.domAPI=a(),g.insertStyleElement=l(),e()(d.Z,g),d.Z&&d.Z.locals&&d.Z.locals,document.querySelectorAll(".panel").forEach((n=>{n.addEventListener("click",f),n.addEventListener("mouseenter",C),n.addEventListener("mouseexit",C)}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,